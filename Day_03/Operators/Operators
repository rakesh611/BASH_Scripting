Operators are symbols that let you perform comparisons, arithmetic, logic, and string operations inside Bash scripts.

ðŸ”¹ Types of Operators in Bash
1. Arithmetic Operators
Used for mathematical calculations.
+ â†’ addition
- â†’ subtraction
* â†’ multiplication
/ â†’ division
% â†’ modulus (remainder)
** â†’ exponentiation

âœ… Example:
#!/bin/bash
a=10
b=3

echo "a+b = $((a + b))"
echo "a-b = $((a - b))"
echo "a*b = $((a * b))"
echo "a/b = $((a / b))"
echo "a%b = $((a % b))"
echo "a^b = $((a ** b))"

2. Relational / Comparison Operators
Used for numbers only inside [ ].
-eq â†’ equal to
-ne â†’ not equal to
-gt â†’ greater than
-lt â†’ less than
-ge â†’ greater than or equal to
-le â†’ less than or equal to

âœ… Example:
#!/bin/bash
x=10
y=20

if [ $x -lt $y ]; then
    echo "$x is less than $y"
fi

3. String Operators
Used for string comparison.
= â†’ equal
!= â†’ not equal
< â†’ less than (lexical order)
> â†’ greater than (lexical order)
-z string â†’ true if string is empty
-n string â†’ true if string is not empty

âœ… Example:
#!/bin/bash
str1="hello"
str2="world"

if [ "$str1" != "$str2" ]; then
    echo "Strings are different"
fi

4. Logical Operators
Used to combine conditions.
&& â†’ logical AND
|| â†’ logical OR
! â†’ logical NOT

âœ… Example:
#!/bin/bash
age=20
citizen="yes"

if [ $age -ge 18 ] && [ $citizen = "yes" ]; then
    echo "Eligible to vote"
fi

5. File Test Operators
Used to check properties of files.
-e file â†’ file exists
-f file â†’ is a regular file
-d file â†’ is a directory
-r file â†’ readable
-w file â†’ writable
-x file â†’ executable
-s file â†’ file size > 0

âœ… Example:
#!/bin/bash
file="/etc/passwd"

if [ -f $file ]; then
    echo "File exists and is a regular file"
fi

6. Assignment Operators
= â†’ assign a value
+= â†’ add and assign
-= â†’ subtract and assign
*= â†’ multiply and assign
/= â†’ divide and assign

âœ… Example:
#!/bin/bash
num=10
((num += 5))   # num = num + 5
echo "num = $num"


