A loop is used when you want to execute a block of commands repeatedly.
Bash supports three main types of loops: for, while, until.

ðŸ”¹ 1. for loop
Used when you know how many times to repeat.

Syntax
for variable in list
do
    # commands
done

Exampleâ€“ Print Numbers
#!/bin/bash
for i in 1 2 3 4 5
do
    echo "Number: $i"
done

ðŸ”¹ 2. while loop
Runs as long as a condition is true.

Syntax
while [ condition ]
do
    # commands
done

Example â€“ Countdown
#!/bin/bash
count=5
while [ $count -gt 0 ]
do
    echo "Countdown: $count"
    ((count--))
done

ðŸ”¹ 3. until loop
Runs until a condition becomes true (opposite of while).

Syntax
until [ condition ]
do
    # commands
done

Example â€“ Count Up
#!/bin/bash
num=1
until [ $num -gt 5 ]
do
    echo "Number: $num"
    ((num++))
done

ðŸ”¹ 4. Loop Control Statements
break â†’ exit the loop immediately.
continue â†’ skip the current iteration and move to the next.

Example â€“ Skip Number
#!/bin/bash
for i in {1..5}
do
    if [ $i -eq 3 ]
    then
        continue
    fi
    echo "Number: $i"
done
âœ… Output: 1, 2, 4, 5

ðŸ”‘ Key Points
Use for loop â†’ when iterating over a list or fixed range.
Use while loop â†’ when looping depends on a condition.
Use until loop â†’ when you want to keep looping until a condition is met.
