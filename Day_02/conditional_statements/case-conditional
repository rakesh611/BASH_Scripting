The case statement is like a switch-case in other languages (C, Java, etc.).
Itâ€™s used when you want to compare one variable against multiple values.

Syntax of case in Bash:-
case variable in
    pattern1)
        # commands for pattern1
        ;;
    pattern2)
        # commands for pattern2
        ;;
    *)
        # default commands (if no pattern matches)
        ;;
esac
ðŸ”¹ ;; â†’ ends a case block.
ðŸ”¹ * â†’ acts like default (matches anything).
ðŸ”¹ esac â†’ ends the case block (reverse of "case")

Exampleâ€“ Day of Week.
#!/bin/bash
day="Mon"

case $day in
    "Mon")
        echo "Today is Monday"
        ;;
    "Tue")
        echo "Today is Tuesday"
        ;;
    "Wed")
        echo "Today is Wednesday"
        ;;
    *)
        echo "Unknown day"
        ;;
esac
âœ… Output: Today is Monday

Exampleâ€“ Menu Selection
#!/bin/bash
echo "Choose an option:"
echo "1. Show date"
echo "2. Show current directory"
echo "3. Show logged in users"

read choice

case $choice in
    1)
        date
        ;;
    2)
        pwd
        ;;
    3)
        who
        ;;
    *)
        echo "Invalid choice"
        ;;
esac


When to use case vs if?
Use if-elif-else â†’ for ranges or complex conditions (e.g., if [ $num -gt 10 ]).
Use case â†’ when checking exact matches (strings, numbers, options).
